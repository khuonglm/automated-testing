Example 1:
[API Documentation]
{
    "samples": [
        {
            "id": 0,
            "request": "curl -X PUT http://localhost:5000//api/articles/how-to-brew-coffee -H \"Authorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MzIxOTg3NTgsIm5iZiI6MTczMjE5ODc1OCwianRpIjoiNTQ3NmNhNDAtOTdiZi00YWU2LTg1ZjgtOGJkNjIwMGZjOWYzIiwiZXhwIjo4ODEzMjE5ODc1OCwiaWRlbnRpdHkiOjMsImZyZXNoIjp0cnVlLCJ0eXBlIjoiYWNjZXNzIn0.HTWiwUDMZarVhleiknzypblM2bjLPZaIbaeQlrT6NxU\" -H \"Content-Type: application/json\" -d '{\"article\": {\"title\": \"How to brew coffee and tea\"}}'",
            "response": {
                "article": {
                    "author": {
                        "bio": null,
                        "email": "namcao@kaist.ac.kr",
                        "following": false,
                        "image": null,
                        "username": "namcao"
                    },
                    "body": "You have to believe",
                    "createdAt": "2024-11-17T06:55:59.723400",
                    "description": "Instant is the way to go",
                    "favorited": false,
                    "favoritesCount": 0,
                    "slug": "how-to-brew-coffee",
                    "tagList": [
                        "reactjs",
                        "angularjs",
                        "coffee"
                    ],
                    "title": "How to brew coffee and tea",
                    "updatedAt": "2024-11-21T14:22:12.855024"
                }
            }
        },
        {
            "id": 1,
            "request": "curl -X PUT http://localhost:5000//api/articles/how-to-brew-water -H \"Authorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MzIxOTg3NTgsIm5iZiI6MTczMjE5ODc1OCwianRpIjoiNTQ3NmNhNDAtOTdiZi00YWU2LTg1ZjgtOGJkNjIwMGZjOWYzIiwiZXhwIjo4ODEzMjE5ODc1OCwiaWRlbnRpdHkiOjMsImZyZXNoIjp0cnVlLCJ0eXBlIjoiYWNjZXNzIn0.HTWiwUDMZarVhleiknzypblM2bjLPZaIbaeQlrT6NxU\" -H \"Content-Type: application/json\" -d '{\"article\": {\"title\": \"How to brew coffee and tea\"}}'",
            "response": {
                "errors": {
                    "body": [
                        "Article not found"
                    ]
                }
            }
        }
    ],
    "id": 11,
    "method": "PUT",
    "endpoint": "/api/articles/<slug>",
    "description": "Update an article by its \"slug. Authentication required, returns the updated Article. Optional fields: title, description, body. The slug field also gets updated when the title change.\n"
}

[Reasoning]
- The HTTP method is PUT.
- The path has a path parameter: <slug>.
- A Bearer token is required, so we need to include it in the header
- The request body must include "article".
- No query parameters are mentioned.

[Extracted JSON]
{
  "method": "GET",
  "url": "/api/articles/<slug>",
  "headers": {
    "Authorization": "Token <token>",
  },
  "path_parameters": {
    "slug": "<string>",
  },
  "query_parameters": {},
  "body": {
    "article": {
        "title": "<string>",
    },
  }
}

Now process the following API documentation:
[API Documentation]
{api}